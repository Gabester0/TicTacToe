{"version":3,"sources":["Board.js","Square.js","ConfettiDot.js","App.js","index.js"],"names":["Board","props","id","children","Square","className","onClick","click","number","value","StyledConfettiDot","styled","svg","AnimatedConfettiDot","animated","Dot","useSpring","config","default","from","horizontal","upwards","to","totalHorizontal","totalUpwards","startTime","Date","getTime","lastTime","style","transform","interpolate","v","h","currentTime","duration","finalY","cx","cy","r","fill","App","useState","player","setPlayer","Array","map","board","setBoard","xmoves","setXMoves","omoves","setOMoves","winner","setWinner","draw","setDraw","lastWin","setLastWin","solutions","handleClick","e","curr","parseInt","target","useEffect","checkWinner","length","playerMoves","i","array","match","filter","includes","document","getElementById","backgroundColor","opacity","squares","key","ConfettiDot","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c52e6f40.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Board.css';\r\n\r\nconst Board = (props)=>{\r\n\r\n    return (\r\n        <div id=\"background\">\r\n            <div id=\"board\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport './Square.css';\r\n\r\nconst Square = (props)=>{\r\n\r\n    return  (\r\n        <div className=\"square\" id={props.id} onClick={props.click}>\r\n            <p>{props.number}</p>\r\n            <h1>{props.value}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { animated, config, useSpring, interpolate } from 'react-spring';\r\n\r\nconst StyledConfettiDot = styled.svg`\r\n    position: absolute;\r\n    will-change: transform;\r\n`;\r\n\r\nconst AnimatedConfettiDot = animated(StyledConfettiDot);\r\n\r\nconst Dot = () => {\r\n\r\n    const { horizontal, upwards } = useSpring({\r\n        config: config.default,\r\n        from: {\r\n          horizontal: 500,\r\n          upwards: 1600\r\n        },\r\n        to: {\r\n          horizontal: 0,\r\n          upwards: 0\r\n        }\r\n      });\r\n\r\n    const initialX = 0;\r\n    const initialY = 0;\r\n    let totalHorizontal = 0;\r\n    let totalUpwards = 0;\r\n    const startTime = new Date().getTime() / 1000;\r\n    let lastTime = startTime;\r\n    const gravityPerSecond = 30;\r\n\r\n    return (\r\n        <AnimatedConfettiDot style={{\r\n            transform: interpolate([upwards, horizontal], (v,h) => {\r\n                const currentTime = new Date().getTime() / 1000;\r\n                const duration = currentTime - lastTime;\r\n                const totalDuration = currentTime - startTime;\r\n                const verticalTraveled = v * duration;\r\n                const horizontalTraveled = h * duration;\r\n                totalUpwards += verticalTraveled;\r\n                totalHorizontal += horizontalTraveled;\r\n                lastTime = currentTime;\r\n                const totalGravity = gravityPerSecond * totalDuration;\r\n                const finalX = initialX + totalHorizontal;\r\n                const finalY = initialY - totalUpwards + totalGravity;\r\n                return `translate3d(${finalX}px, ${finalY}px, 0)`;\r\n            })\r\n        }} >\r\n            <circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"blue\"/>\r\n        </AnimatedConfettiDot>\r\n    )\r\n}\r\n\r\nexport default Dot;","import React, { useState, useEffect } from 'react';\r\nimport Board from './Board';\r\nimport Square from './Square';\r\nimport ConfettiDot from './ConfettiDot';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n//First Turn\r\n  const [player, setPlayer] = useState(\"X\");\r\n  const [board, setBoard] = useState( { ...[...Array(9)].map( ()=> null ) } );\r\n  const [xmoves, setXMoves] = useState([]);\r\n  const [omoves, setOMoves] = useState([]);\r\n  const [winner, setWinner] = useState(false);\r\n  const [draw, setDraw] = useState(false);\r\n  const [lastWin, setLastWin] = useState([]);\r\n  const solutions = [ [0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6] ];\r\n\r\n  const handleClick = (e)=>{\r\n    const curr = parseInt(e.target.id);\r\n    if(board[curr] === null && !winner){\r\n      setBoard({\r\n        ...board,\r\n        [curr]: player\r\n      })\r\n      player === \"X\" ? setXMoves ([...xmoves, curr]) : setOMoves([...omoves, curr]);\r\n    }\r\n  }\r\n\r\n  useEffect( ()=>{\r\n    let win;\r\n    (player === \"X\") ? (win = checkWinner(xmoves)) : (win = checkWinner(omoves))\r\n    if(win) return setWinner(true);\r\n    if(xmoves.length + omoves.length === 9) return setDraw(true);\r\n    setPlayer( (player) => player === \"X\" ? \"O\" : \"X\")\r\n  }, [board]);\r\n\r\n  const highlightWin = (array)=>{\r\n    setLastWin([...array])\r\n    array.map((e)=> document.getElementById(e).style.backgroundColor= \"blue\")\r\n    document.getElementById(\"board\").style.opacity = 0.55;\r\n  }\r\n\r\n  const resetHighlight = (array) => {\r\n    array.map((e)=> document.getElementById(e).style.backgroundColor= \"#efefef\")\r\n    document.getElementById(\"board\").style.opacity = 1;\r\n  }\r\n\r\n  const checkWinner = (playerMoves) =>{\r\n    if(playerMoves.length < 3) return false;\r\n    for(let i =  0; i < solutions.length; i++){\r\n      let match = playerMoves.filter((e)=> solutions[i].includes(e));\r\n      if( match.length === 3 ){\r\n        highlightWin(match);\r\n        return true\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const resetBoard = () => {\r\n    //First Turn\r\n    setPlayer(\"X\");\r\n    setBoard( { ...[...Array(9)].map( ()=> null ) } );\r\n    setXMoves([]);\r\n    setOMoves([]);\r\n    setWinner(false);\r\n    setDraw(false);\r\n    resetHighlight(lastWin);\r\n    setLastWin([]);\r\n  }\r\n\r\n  const squares = [...Array(9)].map( (e, i)=>  (\r\n    <Square \r\n      id={i} \r\n      key={i} \r\n      number={i + 1} \r\n      value={board[i]} \r\n      click={handleClick}\r\n    ></Square>\r\n  ));\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Tic Tac Toe Game!</h1>\r\n      <div className=\"staticBox\">\r\n        <h5 className={ draw ? `draw` : winner ? `winner` : null}>\r\n          {  draw ? `The game is a draw, please restart` : !winner ? `Current Player: ${player}` : `Player ${player} is the winner!`}\r\n        </h5>\r\n      </div>\r\n      <button onClick={resetBoard}>Reset game</button>\r\n      <Board>\r\n        {squares}\r\n      </Board>\r\n      {winner && <ConfettiDot />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}