{"version":3,"sources":["static/Cannon.svg","components/board/Board.js","components/square/Square.js","utility/random.js","components/ConfettiDot.js","components/ConfettiCannon.js","App.js","index.js"],"names":["module","exports","Board","props","id","children","Square","className","onClick","click","number","value","randomInRange","min","max","Math","random","randomIntRange","floor","flipCoin","round","StyledConfettiDot","styled","svg","AnimatedConfettiDot","animated","Circle","size","color","cx","cy","r","fill","Triangle","flipped","points","height","width","getRandomShape","array","Shape","length","Dot","anchorRef","initialHorizontal","initialVertical","rotate","current","initialX","initialY","alignWithAnchor","useSpring","config","default","from","horizontal","opacity","zIndex","upwards","to","totalHorizontal","totalUpwards","startTime","Date","getTime","lastTime","style","transform","interpolate","v","h","currentTime","duration","finalY","ConfettiCannon","colors","dotCount","Array","map","_","index","ConfettiDot","key","App","useState","player","setPlayer","board","setBoard","xmoves","setXMoves","omoves","setOMoves","winner","setWinner","draw","setDraw","lastWin","setLastWin","delay","setDelay","solutions","handleClick","e","curr","parseInt","target","useEffect","checkWinner","playerMoves","i","match","filter","includes","document","getElementById","backgroundColor","highlightWin","startTimer","timer","setTimeout","clearTimeout","confettiAnchorRef","useRef","squares","src","require","alt","ref","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c8fc03b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cannon.aaa7ff86.svg\";","import React from 'react';\r\nimport './Board.css';\r\n\r\nexport const highlightWin = (array, lastWin)=>{\r\n    lastWin([...array])\r\n    array.map((e)=> document.getElementById(e).style.backgroundColor= \"blue\")\r\n    document.getElementById(\"board\").style.opacity = 0.55;\r\n  }\r\n\r\nexport const resetHighlight = (array) => {\r\n    array.map((e)=> document.getElementById(e).style.backgroundColor= \"#efefef\")\r\n    document.getElementById(\"board\").style.opacity = 1;\r\n  }\r\n\r\nconst Board = (props)=>{\r\n    return (\r\n        <div id=\"background\">\r\n            <div id=\"board\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport './Square.css';\r\n\r\nconst Square = (props)=>{\r\n\r\n    return  (\r\n        <div className=\"square\" id={props.id} onClick={props.click}>\r\n            <p>{props.number}</p>\r\n            <h1>{props.value}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;","export const randomInRange = (min, max)=> Math.random() * (max - min) + min;\r\n\r\nexport const randomInHighRange = (min, max)=>{\r\n    return randomInRange(.5, 1) * (max - min) + min;\r\n}\r\n\r\nexport const randomIntRange = (min, max) => Math.floor(randomInRange(min, max));\r\n\r\nexport const randomFromArray = array => array[randomIntRange(0, array.length)] \r\n\r\nexport const flipCoin = () => Math.round( Math.random() ) === 1;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { animated, config, useSpring, interpolate } from 'react-spring';\r\nimport { randomInRange, flipCoin, randomFromArray } from '../utility/random';\r\n\r\nconst StyledConfettiDot = styled.svg`\r\n    position: absolute;\r\n    will-change: transform;\r\n    pointer-events: none;\r\n    width: 10px;\r\n    height: 10px;\r\n`;\r\n\r\nconst AnimatedConfettiDot = animated(StyledConfettiDot);\r\n\r\nconst alignWithAnchor = anchorRef =>{\r\n    if(anchorRef.current == null){\r\n        return {\r\n            initialX: 0,\r\n            initialY: 0,\r\n        }\r\n    }\r\n    return {\r\n        initialX: -37.5,\r\n        initialY: -15,\r\n    }\r\n}\r\n\r\nconst Circle = ({size, color})=>(\r\n    <circle\r\n        cx={`${size / 2}`}\r\n        cy={`${size / 2}`}\r\n        r={`${size / 2 * .6}`}\r\n        fill={color}\r\n    />\r\n);\r\n\r\nconst Triangle = ({size, color}) =>{\r\n    const flipped = flipCoin();\r\n    return(\r\n        <polygon\r\n            points={`\r\n                ${size / 2},\r\n                0 ${size},\r\n                ${randomInRange(flipped ? size /2 : 0, 0)} 0,\r\n                ${randomInRange(flipped ? 0 : size / 2, size)}`}\r\n            fill={color}\r\n        />\r\n    )\r\n}\r\n\r\nconst Square = ({size, color}) =>{\r\n    const flipped = flipCoin();\r\n    return(\r\n        <rect\r\n            height={`${randomInRange( 0, flipped ? size : size / 2 )}`}\r\n            width={`${randomInRange( 0, flipped ? size / 2 : size )}`}\r\n            fill={color}\r\n        />\r\n    )\r\n}\r\n\r\nconst getRandomShape = (color, size) =>{\r\n    const Shape = randomFromArray([Circle, Triangle, Square]);\r\n    return <Shape color={color} size={size} />;\r\n}\r\n\r\nconst Dot = ({anchorRef, color, initialHorizontal, initialVertical, rotate, size}) => {\r\n    const { initialX, initialY } = alignWithAnchor(anchorRef);\r\n\r\n    const { horizontal, upwards, zIndex, opacity } = useSpring({\r\n        config: config.default,\r\n        from: {\r\n          horizontal: initialHorizontal,\r\n          opacity: 80,\r\n          zIndex: 1,\r\n          upwards: initialVertical,\r\n        },\r\n        to: {\r\n          horizontal: 0,\r\n          opacity: 0,\r\n          zIndex: -1,\r\n          upwards: 0,\r\n        }\r\n      });\r\n\r\n    let totalHorizontal = 0;\r\n    let totalUpwards = 0;\r\n    const startTime = new Date().getTime() / 1000;\r\n    let lastTime = startTime;\r\n    const gravityPerSecond = 30;\r\n\r\n    return (\r\n        <AnimatedConfettiDot style={{\r\n            opacity,\r\n            zIndex,\r\n            transform: interpolate([upwards, horizontal], (v,h) => {\r\n                const currentTime = new Date().getTime() / 1000;\r\n                const duration = currentTime - lastTime;\r\n                const totalDuration = currentTime - startTime;\r\n                const verticalTraveled = v * duration;\r\n                const horizontalTraveled = h * duration;\r\n                totalUpwards += verticalTraveled;\r\n                totalHorizontal += horizontalTraveled;\r\n                lastTime = currentTime;\r\n                const totalGravity = gravityPerSecond * totalDuration;\r\n                const finalX = initialX + totalHorizontal;\r\n                const finalY = initialY - totalUpwards + totalGravity;\r\n                return `translate3d(${finalX}px, ${finalY}px, 0) rotate(${rotate}deg)`;\r\n            })\r\n        }} >\r\n            { getRandomShape(color, size) }\r\n        </AnimatedConfettiDot>\r\n    )\r\n}\r\n\r\nexport default Dot;","import React from 'react';\r\nimport ConfettiDot from './ConfettiDot';\r\nimport { randomInRange, randomInHighRange, randomIntRange} from '../utility/random';\r\n\r\nconst ConfettiCannon = ({anchorRef, colors, dotCount})=>(\r\n    <>\r\n        {new Array(dotCount).fill().map( (_, index)=> (\r\n            <ConfettiDot\r\n                key={ index }\r\n                color={ colors[randomIntRange(0, colors.length)] }\r\n                anchorRef={anchorRef}\r\n                initialHorizontal={randomInRange(-250, 250) }\r\n                initialVertical={randomInHighRange(200, 700) }\r\n                rotate={randomInRange(0, 360)}\r\n                size={randomInRange(10, 20)}\r\n            />\r\n        ) )}\r\n    </>\r\n)\r\n\r\nexport default ConfettiCannon;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Board, { highlightWin, resetHighlight } from './components/board/Board';\r\nimport Square from './components/square/Square';\r\nimport ConfettiCannon from './components/ConfettiCannon';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [player, setPlayer] = useState(\"X\");\r\n  const [board, setBoard] = useState( { ...[...Array(9)].map( ()=> null ) } );\r\n  const [xmoves, setXMoves] = useState([]);\r\n  const [omoves, setOMoves] = useState([]);\r\n  const [winner, setWinner] = useState(false);\r\n  const [draw, setDraw] = useState(false);\r\n  const [lastWin, setLastWin] = useState([]);\r\n  const [delay, setDelay] = useState(false);\r\n  const solutions = [ [0,1,2], [3,4,5], [6,7,8], [0,3,6], [1,4,7], [2,5,8], [0,4,8], [2,4,6] ];\r\n\r\n  const handleClick = (e)=>{\r\n    const curr = parseInt(e.target.id);\r\n    if(board[curr] === null && !winner){\r\n      setBoard({\r\n        ...board,\r\n        [curr]: player\r\n      })\r\n      player === \"X\" ? setXMoves ([...xmoves, curr]) : setOMoves([...omoves, curr]);\r\n    }\r\n  }\r\n\r\n  useEffect( ()=>{\r\n    let win;\r\n    (player === \"X\") ? (win = checkWinner(xmoves)) : (win = checkWinner(omoves))\r\n    if(win) return setWinner(true);\r\n    if(xmoves.length + omoves.length === 9) return setDraw(true);\r\n    setPlayer( (player) => player === \"X\" ? \"O\" : \"X\")\r\n  }, [board]);\r\n\r\n  const checkWinner = (playerMoves) =>{\r\n    if(playerMoves.length < 3) return false;\r\n    for(let i =  0; i < solutions.length; i++){\r\n      let match = playerMoves.filter((e)=> solutions[i].includes(e));\r\n      if( match.length === 3 ){\r\n        highlightWin(match, setLastWin);\r\n        startTimer();\r\n        return true\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const startTimer = ()=>{\r\n      const timer = setTimeout(() => {\r\n        setDelay(true)\r\n      }, 1050);\r\n      return () => clearTimeout(timer);\r\n  }\r\n\r\n  const resetBoard = () => {\r\n    setPlayer(\"X\");\r\n    setBoard( { ...[...Array(9)].map( ()=> null ) } );\r\n    setXMoves([]);\r\n    setOMoves([]);\r\n    setWinner(false);\r\n    setDraw(false);\r\n    resetHighlight(lastWin);\r\n    setLastWin([]);\r\n    setDelay(false)\r\n  }\r\n\r\n  const confettiAnchorRef = useRef();\r\n\r\n  const squares = [...Array(9)].map( (e, i)=>  (\r\n    <Square \r\n      id={i} \r\n      key={i} \r\n      number={i + 1} \r\n      value={board[i]} \r\n      click={handleClick}\r\n    ></Square>\r\n  ));\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Tic Tac Toe Game!</h1>\r\n      <div className=\"staticBox\">\r\n        <h5 className={ draw ? `draw` : winner ? `winner` : null}>\r\n          {  draw ? `The game is a draw, please restart` : !winner ? `Current Player: ${player}` : `Player ${player} is the winner!`}\r\n        </h5>\r\n      </div>\r\n      <button onClick={resetBoard}>Reset game</button>\r\n      <Board>\r\n        {squares}\r\n      </Board>\r\n      <img \r\n        className={winner ? \"cannon visible\" : \"cannon\"}\r\n        src={require('./static/Cannon.svg')} \r\n        alt=\"confetti canon\"\r\n        ref={confettiAnchorRef} />\r\n      {winner && delay && (\r\n        <ConfettiCannon \r\n          anchorRef={confettiAnchorRef}\r\n          dotCount={30}\r\n          colors={['red', 'green', 'blue', 'yellow']}\r\n        />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}